/// 10413663, Chi Chiu Pong
/// 10/4/2022
/// LAB_10, Problem 1

#include <iostream>
#include <cmath>
using namespace std;

///Write a program that find x in a given quadratic equation (a,b,c : integers).
///You should use sqrt and pow functins

int a,b,c;

//input function
void input();

//quadratic equation formulator
void quadratic_formulator(int, int, int);

//b^2-4ac > 0, there are two solutions.
//b^2-4ac = 0, only one solution.
//b^2-4ac < 0, no real root.
//Root Determinator
void root_determinator(int,int,int);

//Root calculator
void root_calculator(int,int,int);

int main()
{
        input();
        quadratic_formulator(a, b, c);
        root_determinator(a, b, c);
        root_calculator(a,b,c);
}

void input()
{
    cout << " Enter a : ";
    cin >> a;
    cout << " Enter b : ";
    cin >> b;
    cout << " Enter c : ";
    cin >> c;
    cout << endl;
}
void quadratic_formulator(int qa, int qb, int qc)
{
    cout << "The quadratic equation is " << qa << "x^2 + " << qb << "x + " << qc << " = 0 " << endl;
}
void root_determinator(int ra,int rb,int rc)
{
    int discriminate = pow(b,2)-4*ra*rc ;
    if ( discriminate > 0 ){
        cout << "There are two solutions."<< endl;
    }
    else if( discriminate == 0 ){
        cout << "There is only one solution." << endl;
    }
    else if( discriminate < 0 ) {
        cout << "There is no real solution." << endl;
    }
}

void root_calculator(int rca,int rcb,int rcc)
{
    int discriminate = pow(rcb,2)-4*rca*rcc;
    double root1,root2;
    cout.precision(2);
    cout.setf(ios::fixed);
    if ( discriminate > 0 ){
        root1 = ((-1 * rcb) + sqrt(discriminate))/(2*rca);
        root2 = ((-1 * rcb) - sqrt(discriminate))/(2*rca);
        cout << "They are " << root1 << " and " << root2 << ".";
    }
    else if( discriminate == 0 ){
        root1 = (-1*rcb) / (2*rca);
        cout << "It is " << root1;
    }
}

/// 10413663, Chi Chiu Pong
/// 10/4/2022
/// LAB_10, Problem 2

#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

///play rock paper scissors, use srand() and rand()
///Input function
void input();
///Compute and assign computer choice
char computer_choice();
///Output function, win lose or tie.
void result();
///More? function implementation
void more();

int computer;
char user;
char computer_rps = 'x';
char y_n = 'y';


int main()
{
    cout << "I chose one." << endl<<endl;
    do{
        input();
        cout << "My choice is : " << computer_choice() << endl;
        result();
        more();
    }while(y_n=='Y'||y_n=='y');
}

void input()
{
    cout << "Choose one among rock(R), paper(P), Scissor(S) : ";
    cin >> user;
}
char computer_choice()
{
    srand(time(NULL));
    computer = rand() % 3+1;
    if(computer ==1)
    {
        computer_rps = 'R';
    }
    else if (computer == 2)
    {
        computer_rps = 'P';
    }
    else if (computer == 3)
    {
        computer_rps = 'S';
    }
    return computer_rps;
}
void result()
{
    if((computer_rps =='R'&& user=='P')||(computer_rps =='P'&& user=='S')||(computer_rps =='S'&& user=='R'))
    {
        cout << "You win!" << endl <<endl;
    }
    else if((computer_rps =='R'&& user=='S')||(computer_rps =='P'&& user=='R')||(computer_rps =='S'&& user=='P'))
    {
        cout << "I win!" << endl <<endl;
    }
    else if((computer_rps =='R'&& user=='R')||(computer_rps =='P'&& user=='P')||(computer_rps =='S'&& user=='S'))
    {
        cout << "Tie" << endl <<endl;
    }
}
void more()
{
    cout << "More (y/n)? ";
    cin >> y_n;
}
